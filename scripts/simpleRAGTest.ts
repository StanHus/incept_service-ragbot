import fetch from 'node-fetch';

interface TestQuestion {
  grade: number;
  subject: string;
  question: string;
  expectedKeywords: string[];
}

const testQuestions: TestQuestion[] = [
  // Elementary Tests
  {
    grade: 1,
    subject: "ุงููุบุฉ ุงูุนุฑุจูุฉ",
    question: "ูุง ูู ุงูุญุฑูู ุงูุฃุจุฌุฏูุฉ ุงูุนุฑุจูุฉ ุงูุฃูููุ",
    expectedKeywords: ["ุฃูู", "ุจุงุก", "ุชุงุก", "ุญุฑูู", "ุฃุจุฌุฏูุฉ"]
  },
  {
    grade: 2,
    subject: "ุงูุฑูุงุถูุงุช", 
    question: "ููู ูุฌูุน ุงูุฃุฑูุงูุ",
    expectedKeywords: ["ุฌูุน", "ุฃุฑูุงู", "ุญุณุงุจ", "ุฑูุงุถูุงุช"]
  },
  {
    grade: 3,
    subject: "ุงูุนููู",
    question: "ูุง ูู ุฃุฌุฒุงุก ุงููุจุงุชุ",
    expectedKeywords: ["ูุจุงุช", "ุฌุฐูุฑ", "ุณุงู", "ุฃูุฑุงู", "ุฒูุฑุฉ"]
  },
  
  // Middle School Tests
  {
    grade: 7,
    subject: "ุงูุฃุญูุงุก",
    question: "ูุง ูู ุฃุฌุฒุงุก ุงูุฎููุฉุ",
    expectedKeywords: ["ุฎููุฉ", "ููุงุฉ", "ุณูุชูุจูุงุฒู", "ุบุดุงุก"]
  },
  {
    grade: 8,
    subject: "ุงูููุฒูุงุก",
    question: "ูุง ูู ูุงููู ูููุชูุ",
    expectedKeywords: ["ูููุชู", "ููุฉ", "ุญุฑูุฉ", "ูุงููู"]
  },
  {
    grade: 9,
    subject: "ุงูููููุงุก",
    question: "ูุง ูู ุงูุนูุงุตุฑ ุงูููููุงุฆูุฉุ",
    expectedKeywords: ["ุนูุงุตุฑ", "ุฐุฑุฉ", "ุฌุฏูู", "ููุฏุฑูุฌูู", "ุฃูุณุฌูู"]
  },

  // High School Tests  
  {
    grade: 10,
    subject: "ุงูุชุฑุจูุฉ ุงูุฅุณูุงููุฉ",
    question: "ูุง ูู ุฃุฑูุงู ุงูุฅุณูุงูุ",
    expectedKeywords: ["ุดูุงุฏุฉ", "ุตูุงุฉ", "ุฒูุงุฉ", "ุตูู", "ุญุฌ"]
  },
  {
    grade: 11,
    subject: "ุงูุชุงุฑูุฎ ุงูุฅุณูุงูู",
    question: "ูู ูู ุงูุฎููุงุก ุงูุฑุงุดุฏููุ",
    expectedKeywords: ["ุฃุจู ุจูุฑ", "ุนูุฑ", "ุนุซูุงู", "ุนูู", "ุฎููุงุก"]
  },
  {
    grade: 12,
    subject: "ุงูุฌุบุฑุงููุง",
    question: "ูุง ูู ุฏูู ุงูุฎููุฌ ุงูุนุฑุจูุ",
    expectedKeywords: ["ุงููููุช", "ุงูุณุนูุฏูุฉ", "ุงูุฅูุงุฑุงุช", "ูุทุฑ", "ุงูุจุญุฑูู", "ุนูุงู"]
  },

  // Specialized Subjects
  {
    grade: 6,
    subject: "ุงููุฑุขู ุงููุฑูู",
    question: "ูุง ูู ุณูุฑุฉ ุงููุงุชุญุฉุ",
    expectedKeywords: ["ูุงุชุญุฉ", "ุงูุญูุฏ", "ุฑุจ ุงูุนุงูููู", "ูุฑุขู"]
  }
];

async function testRAGQuestion(question: TestQuestion): Promise<void> {
  console.log(`\n๐ Testing Grade ${question.grade} - ${question.subject}`);
  console.log(`โ Question: ${question.question}`);
  
  try {
    const response = await fetch('http://localhost:3000/api/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        messages: [
          {
            role: 'user',
            content: question.question
          }
        ]
      })
    });

    if (!response.ok) {
      console.log(`โ HTTP Error: ${response.status}`);
      return;
    }

    const responseText = await response.text();
    console.log(`๐ Response: ${responseText.substring(0, 200)}...`);
    
    // Check for expected keywords
    const foundKeywords = question.expectedKeywords.filter(keyword => 
      responseText.toLowerCase().includes(keyword.toLowerCase())
    );
    
    const score = (foundKeywords.length / question.expectedKeywords.length) * 100;
    
    console.log(`๐ฏ Found keywords: ${foundKeywords.join(', ')}`);
    console.log(`โญ Score: ${score.toFixed(1)}% (${foundKeywords.length}/${question.expectedKeywords.length})`);
    
    if (score >= 30) {
      console.log('โ PASSED');
    } else {
      console.log('โ FAILED - Low keyword match');
    }

  } catch (error) {
    console.log(`โ Error: ${error}`);
  }
}

async function runRAGTests(): Promise<void> {
  console.log('๐ Starting Simple RAG Tests');
  console.log('=' .repeat(50));
  
  for (const question of testQuestions) {
    await testRAGQuestion(question);
    
    // Add delay between requests
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  console.log('\nโ RAG Testing Complete!');
}

runRAGTests().catch(console.error);